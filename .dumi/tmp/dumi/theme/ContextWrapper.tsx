// @ts-nocheck
// This file is generated by Umi automatically
// DO NOT CHANGE IT MANUALLY!
import React, { useState, useEffect, useRef } from 'react';
import { useOutlet, history } from 'dumi';
import { warning } from '/Users/huangyuming/Desktop/createProjects/AI-code/node_modules/.pnpm/rc-util@5.44.4_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/rc-util';
import { SiteContext, type ISiteContext } from '/Users/huangyuming/Desktop/createProjects/AI-code/node_modules/.pnpm/dumi@2.4.21_@babel+core@7.27.1_@swc+helpers@0.5.2_@types+node@20.17.46_@types+react@18._54b15bc5b15defb5cc2e774a369d3a31/node_modules/dumi/dist/client/theme-api/context.js';
import { components } from '../meta/atoms';
import { locales } from '../locales/config';



const entryExports = {
};

// Static content
const pkg = {"name":"@corn12138/hooks","description":"🎣 A collection of powerful React hooks for modern web development. Features authentication, debouncing, async operations, network status, form handling and more.","version":"1.0.5","license":"MIT","repository":{"type":"git","url":"https://github.com/corn12138/ai-code-hooks"},"author":{"name":"AI-Code Team","email":"team@ai-code-hooks.com","url":"https://github.com/ai-code-project"}};
const historyType = "browser";
const hostname = undefined;
const themeConfig = {"title":"AI-Code Hooks","footer":"Copyright © 2025 AI-Code Hooks. Built with ❤️ using Dumi.","prefersColor":{"default":"light","switch":true},"nprogress":true,"lastUpdated":true,"name":"AI-Code Hooks","logo":false,"nav":[{"title":"🏠 首页","link":"/"},{"title":"🚀 快速开始","link":"/guide"},{"title":"🎮 交互示例","link":"/examples"},{"title":"📚 Hooks","link":"/hooks"},{"title":"🌟 GitHub","link":"https://github.com/corn12138/ai-code-hooks"},{"title":"📦 NPM","link":"https://www.npmjs.com/package/@corn12138/hooks"}],"sidebar":{"/":[{"title":"开始使用","children":[{"title":"快速开始","link":"/guide"},{"title":"交互式示例","link":"/examples"}]},{"title":"Hooks API","children":[{"title":"useAuth","link":"/use-auth"},{"title":"useAsync","link":"/use-async"},{"title":"useForm","link":"/use-form"},{"title":"useNetworkStatus","link":"/use-network-status"},{"title":"useLocalStorage","link":"/use-local-storage"},{"title":"useWindowSize","link":"/use-window-size"},{"title":"useApi","link":"/use-api"},{"title":"useEditor","link":"/use-editor"},{"title":"useDebounce","link":"/use-debounce"},{"title":"useClientSide","link":"/use-client-side"}]}]},"socialLinks":{"github":"https://github.com/corn12138/ai-code-hooks"},"editLink":false,"sourceLink":"https://github.com/corn12138/ai-code-hooks/tree/main/{fileName}#L{line}"};
const _2_level_nav_available = true;

export default function DumiContextWrapper() {
  const outlet = useOutlet();
  const [loading, setLoading] = useState(false);
  const prev = useRef(history.location.pathname);

  useEffect(() => {
    return history.listen((next) => {
      if (next.location.pathname !== prev.current) {
        prev.current = next.location.pathname;

        // scroll to top when route changed
        document.documentElement.scrollTo(0, 0);
      }
    });
  }, []);

  const context: ISiteContext = React.useMemo(() => {
    const ctx = {
      pkg,
      historyType,
      entryExports,
      demos: null,
      components,
      locales,
      loading,
      setLoading,
      hostname,
      themeConfig,
      _2_level_nav_available,
    };

    // Proxy do not warning since `Object.keys` will get nothing to loop
    Object.defineProperty(ctx, 'demos', {
      get: () => {
        warning(false, '`demos` return empty in latest version, please use `useDemo` instead.');
        return {};
      },
    });

    return ctx;
  }, [
    pkg,
    historyType,
    entryExports,
    components,
    locales,
    loading,
    setLoading,
    hostname,
    themeConfig,
    _2_level_nav_available,
  ]);

  return (
    <SiteContext.Provider value={context}>
      {outlet}
    </SiteContext.Provider>
  );
}
